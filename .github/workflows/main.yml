name: orchestrator-pipeline
on:
  push:
    branches: [ main ]
jobs:
  # Build stage
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract version and artifact ID from pom.xml
        run: |
          VERSION_POM=<span class="math-inline">\(xmllint \-\-xpath '/\*\[local\-name\(\)\="project"\]/\*\[local\-name\(\)\="version"\]/text\(\)' pom\.xml\)
          ARTIFACT\_ID\=</span>(xmllint --xpath '/*[local-name()="project"]/*[local-name()="artifactId"]/text()' pom.xml)
        echo "VERSION_POM: $VERSION_POM"
        echo "ARTIFACT_ID: $ARTIFACT_ID"

      - name: Set up cache for Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: <span class="math-inline">\{\{ runner\.os \}\}\-maven\-</span>{{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Use Maven image
        uses: actions/setup-java@v3
        with:
          java-version: 13

      - name: Build with Maven
        run: mvn clean install -Dmaven.repo.local=$HOME/.m2/repository

      - name: Create build artifact (if applicable)
        run: mv target/$ARTIFACT_ID-$VERSION_POM.jar target/$ARTIFACT_ID-$CI_COMMIT_SHORT_SHA.jar  # Adjust as needed

      - name: Upload build artifact (optional)
        uses: actions/upload-artifact@v3
        with:
          name: backoffice-service-$CI_COMMIT_SHORT_SHA.jar
          path: target/*.jar  # Adjust path based on your artifact

      # Test stage (replace with your actual test commands)
  test:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the successful completion of the 'build' job
    steps:
      - uses: actions/checkout@v3

      - name: Use built artifact (if test involves the artifact)
        uses: actions/download-artifact@v3
        with:
          name: backoffice-service-$CI_COMMIT_SHORT_SHA.jar  # Adjust name if needed

      - name: Run your tests
        run: |  # Replace with your actual test commands
          # Example: mvn test

    # Package stage (replace with your actual packaging commands)
  package:
    runs-on: ubuntu-latest
    needs: test  # This job depends on the successful completion of the 'test' job (if applicable)
    steps:
      - uses: actions/checkout@v3

      - name: Use built artifact (if packaging involves the artifact)
        uses: actions/download-artifact@v3
        with:
          name: backoffice-service-$CI_COMMIT_SHORT_SHA.jar  # Adjust name if needed

      - name: Package the application (if applicable)
        run: |  # Replace with your actual packaging commands
          # Example: Some packaging command

    # Deploy stage (replace with your actual deployment commands)
  deploy:
    runs-on: ubuntu-latest
    needs: package  # This job depends on the successful completion of the 'package' job (if applicable)
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker registry (if pushing image)
        uses: docker/login@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image (replace with your Dockerfile)
        run: |  # Replace with your Dockerfile commands
          # Example: docker build -t ${{ secrets.REGISTRY_URL }}/$ARTIFACT_ID:$VERSION_POM-$CI_COMMIT_SHA .

      - name: Push Docker image (if pushing image)
        run: docker push ${{ secrets.REGISTRY_URL }}/$ARTIFACT_ID:$VERSION_POM-$CI_COMMIT_SHA





    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      # - name: Update dependency graph
      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
